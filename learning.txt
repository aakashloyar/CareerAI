{JSON.stringify(session.data?.user?.name)}
{session.data?.user?.name}







throw new Error("User not found");  
return NextResponse.json({ error: "User already exists" }, { status: 400 });

//here ist is not catched by try catch as an error while 2nd will be 



*** bcrypt not give same hashcode for same password


//why you cannot use header(localstorage) for nextjs
//next-> ssr -> in first request you cannot send header
//so next cannot get to know who is sending the request
//so you have to use cookie that go with every request


//but in react it is csr so first request it will go to server then some html
then some client then some server so local storage work here 

//session can be stored in 2 ways 
//database 
//browser
//adapter are only used when you are using database session strategy
//adapter help to add session entry in session table 


//now all the callbacks in next auth
//signin -> used to block some user
//jwt -> used to update the payload of jwt token  suck as updating user id
//session -> store important information about user to show on frontend



//3 folders
//action lib config folder which files these store

//action-> store whatever database requests
//lib -> database helpers like prismaclient password hashcode hash 
//config->give all the configurations like types and everything

  @@unique([email, sessionId]) // Ensure email + sessionId pair is unique
this line ensure no duplicate entry in table 
